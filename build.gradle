plugins {
    id 'java'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '9.0.0-beta6'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'dev.ua.uaproject.catwalk'
version = '1.5.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "codemc-snapshots"
        url = "https://repo.codemc.io/repository/maven-snapshots/"
    }
    maven {
        name = "codemc-public"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        name = "placeholderapi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "reposilite-snapshots"
        url = "https://maven.reposilite.com/snapshots"
    }
}

dependencies {
    implementation("io.javalin:javalin-bundle:6.6.0")

    implementation("io.javalin.community.openapi:javalin-openapi-plugin:6.6.0")
    implementation("io.javalin.community.openapi:javalin-swagger-plugin:6.6.0")
    implementation("io.javalin.community.openapi:javalin-redoc-plugin:6.6.0")
    implementation("io.javalin.community.ssl:ssl-plugin:6.6.0")

    annotationProcessor("io.javalin.community.openapi:openapi-annotation-processor:6.6.0")

    implementation("org.apache.commons:commons-compress:1.24.0")
    implementation("commons-io:commons-io:2.13.0")
    implementation("de.tr7zw:item-nbt-api-plugin:2.13.2")
    implementation("org.apache.commons:commons-lang3:3.12.0")

    testImplementation 'org.mockbukkit.mockbukkit:mockbukkit-v1.21:4.46.0'
    testImplementation("com.konghq:unirest-java:3.14.5:standalone")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.3")
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
    compileOnly("org.apache.logging.log4j:log4j-core:2.20.0")
    compileOnly("me.clip:placeholderapi:2.11.6")
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks {
    runServer {
        minecraftVersion("1.21.4")
    }
}

processResources {
    def props = [version: version]
    inputs.properties(props)
    filteringCharset = 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand(props)
    }
}

// build.gradle or build.gradle.kts
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}